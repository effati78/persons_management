{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/effati78/Documents/effati bckup/effati78/Projects/ReactJs-Toplearn/persons_management/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Alert, Button, Badge } from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport SimpleContext from \"./context/SimpleContext\";\nimport Persons from \"./components/person/Persons\";\nimport Header from \"./components/common/Header\";\nimport EnterName from './components/person/EnterName';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [],\n      title: \"مدیریت کننده اشخاص\",\n      personName: \"\",\n      showPersons: true\n    };\n\n    this.handleShowPersons = () => {\n      this.setState({\n        showPersons: !this.state.showPersons\n      });\n    };\n\n    this.handleNameChange = (event, id) => {\n      const {\n        persons: allPersons\n      } = this.state;\n      const personIndex = allPersons.findIndex(x => x.id === id);\n      const person = allPersons[personIndex];\n      console.log(person);\n      person.fullname = event.target.value;\n      const persons = [...allPersons];\n      persons[personIndex] = person;\n      this.setState({\n        persons\n      });\n    };\n\n    this.handleDeletePerson = id => {\n      const newPersons = [...this.state.persons];\n      let filteredPersons = newPersons.filter(p => p.id !== id);\n      this.setState({\n        persons: filteredPersons\n      });\n      let person = newPersons.find(p => p.id == id);\n      toast.error(`${person.fullname} با موفقیت حذف شد.`, {\n        position: \"top-right\",\n        closeButton: true,\n        closeOnClick: true\n      });\n    };\n\n    this.handleNewPerson = () => {\n      const persons = [...this.state.persons];\n      let count = persons.length;\n      const person = {\n        id: count++,\n        fullname: this.state.personName\n      };\n\n      if (this.state.personName == \"\" || this.state.personName.split(\"\", 1) == \" \") {\n        toast.dark(`فیلد نام خالی است یا ابتدای آن فاصله تایپ شده است.`, {\n          position: \"top-center\",\n          closeButton: true,\n          closeOnClick: true\n        });\n        return;\n      }\n\n      persons.push(person);\n      toast.success(`${this.state.personName} با موفقیت اضافه شد.`, {\n        position: \"bottom-right\",\n        closeButton: true,\n        closeOnClick: true\n      });\n      this.setState({\n        persons,\n        personName: \"\"\n      });\n    };\n\n    this.setPerson = event => {\n      this.setState({\n        personName: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      persons,\n      showPersons\n    } = this.state;\n    let person = null;\n\n    if (showPersons) {\n      person = /*#__PURE__*/_jsxDEV(Persons, {\n        persons: persons,\n        handleDeletePerson: this.handleDeletePerson,\n        handleNameChange: this.handleNameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(SimpleContext.Provider, {\n      value: {\n        state: this.state,\n        handleShowPersons: this.handleShowPersons,\n        handleNameChange: this.handleNameChange,\n        handleDeletePerson: this.handleDeletePerson,\n        handleNewPerson: this.handleNewPerson,\n        setPerson: this.setPerson\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rtl text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleShowPersons,\n          variant: showPersons ? \"warning\" : \"info\",\n          className: \"m-4\",\n          children: showPersons ? \"پنهان کردن اشخاص \" : \"نمایش دادن اشخاص\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), person, /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/effati78/Documents/effati bckup/effati78/Projects/ReactJs-Toplearn/persons_management/src/App.js"],"names":["React","Component","Alert","Button","Badge","ToastContainer","toast","SimpleContext","Persons","Header","EnterName","App","state","persons","title","personName","showPersons","handleShowPersons","setState","handleNameChange","event","id","allPersons","personIndex","findIndex","x","person","console","log","fullname","target","value","handleDeletePerson","newPersons","filteredPersons","filter","p","find","error","position","closeButton","closeOnClick","handleNewPerson","count","length","split","dark","push","success","setPerson","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Alert, Button, Badge } from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\n\nimport SimpleContext from \"./context/SimpleContext\";\nimport Persons from \"./components/person/Persons\";\nimport Header from \"./components/common/Header\";\nimport EnterName from './components/person/EnterName';\n\nclass App extends Component {\n  state = {\n    persons: [],\n    title: \"مدیریت کننده اشخاص\",\n    personName: \"\",\n    showPersons: true,\n  };\n\n  handleShowPersons = () => {\n    this.setState({ showPersons: !this.state.showPersons });\n  };\n\n  handleNameChange = (event, id) => {\n    const { persons: allPersons } = this.state;\n\n    const personIndex = allPersons.findIndex((x) => x.id === id);\n    const person = allPersons[personIndex];\n    console.log(person);\n    person.fullname = event.target.value;\n\n    const persons = [...allPersons];\n    persons[personIndex] = person;\n\n    this.setState({ persons });\n  };\n\n  handleDeletePerson = (id) => {\n    const newPersons = [...this.state.persons];\n    let filteredPersons = newPersons.filter((p) => p.id !== id);\n\n    this.setState({ persons: filteredPersons });\n\n    let person = newPersons.find((p) => p.id == id);\n\n    toast.error(`${person.fullname} با موفقیت حذف شد.`, {\n      position: \"top-right\",\n      closeButton: true,\n      closeOnClick: true,\n    });\n  };\n\n  handleNewPerson = () => {\n    const persons = [...this.state.persons];\n    let count = persons.length;\n    const person = {\n      id: count++,\n      fullname: this.state.personName,\n    };\n\n    if (\n      this.state.personName == \"\" ||\n      this.state.personName.split(\"\", 1) == \" \"\n    ) {\n      toast.dark(`فیلد نام خالی است یا ابتدای آن فاصله تایپ شده است.`, {\n        position: \"top-center\",\n        closeButton: true,\n        closeOnClick: true,\n      });\n      return;\n    }\n\n    persons.push(person);\n\n    toast.success(`${this.state.personName} با موفقیت اضافه شد.`, {\n      position: \"bottom-right\",\n      closeButton: true,\n      closeOnClick: true,\n    });\n\n    this.setState({ persons, personName: \"\" });\n  };\n\n  setPerson = (event) => {\n    this.setState({ personName: event.target.value });\n  };\n\n  render() {\n    const { persons, showPersons } = this.state;\n\n    let person = null;\n\n    if (showPersons) {\n      person = (\n        <Persons\n          persons={persons}\n          handleDeletePerson={this.handleDeletePerson}\n          handleNameChange={this.handleNameChange}\n        />\n      );\n    }\n\n    return (\n      <SimpleContext.Provider value={{state: this.state, handleShowPersons: this.handleShowPersons, handleNameChange: this.handleNameChange, handleDeletePerson: this.handleDeletePerson, handleNewPerson: this.handleNewPerson, setPerson: this.setPerson}}>\n        <div className=\"rtl text-center\">\n          <Header />\n\n\n\n          <Button\n            onClick={this.handleShowPersons}\n            variant={showPersons ? \"warning\" : \"info\"}\n            className=\"m-4\"\n          >\n            {showPersons ? \"پنهان کردن اشخاص \" : \"نمایش دادن اشخاص\"}\n          </Button>\n\n          {person}\n\n          <ToastContainer />\n        </div>\n      </SimpleContext.Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}